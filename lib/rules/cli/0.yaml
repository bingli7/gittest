---
:global_options:
  # these are options as seen by `oc options`
  :api_version: --api-version=<value>
  :ca: --certificate-authority=<value>
  :cluster: --cluster=<value>
  :config: --config=<value>
  :context: --context=<value>
  :h: -h
  :help: --help
  :user: --user=<value>
  :insecure: --insecure-skip-tls-verify=<value>
  :namespace: --namespace=<value>
  :n: -n <value>
  :loglevel: --loglevel=<value>
  :log_dir: --log_dir=<value>
  :log_flush_frequency: --log_flush_frequency=<value>
  :logtostderr: --logtostderr=<value>
  :server: --server=<value>
  :stderrthreshold: --stderrthreshold=<value>
  :token: --token=<value>
:add_secret:
  :cmd: oc secrets add serviceaccount/<sa_name> secrets/<secret_name>
  :options:
    :for: --for=<value>
:annotate:
  :cmd: oc annotate
  :options:
    :resource: <value>
    :resourcename: <value>
    :keyval: <value>
    :all: --all=<value>
    :noheadersfalse: --no-headers=<value>
    :o: -o <value>
    :output: --output=<value>
    :outputversion: --output-version=<value>
    :overwrite: --overwrite=<value>
    :resourceversion: --resource-version=<value>
    :t: -t <value>
    :template: --template=<value>
:attach:
  :cmd: oc attach
  :options:
    :cmd_name: <value>
    :pod: <value>
    :c: -c <value>
    :i: -i
    :t: -t
    :container: --container=<value>
    :stdin: --stdin=<value>
    :tty: --tty=<value>
:build_logs:
  :cmd: oc build-logs <build_name>
  :options:
    :follow: --follow=<value>
    :nowait: --nowait=<value>
:cancel_build:
  :cmd: oc cancel-build
  :options:
    :build_name: <value>
    :bc_name: <value>
    :dump_logs: --dump-logs=<value>
    :restart: --restart=<value>
    :state: --state=<value>
:config:
  :cmd: oc config
  :options:
    :subcommand: <value>
:config_set:
  :cmd: oc config set <prop_name> <prop_value>
:config_set_cluster:
  :cmd: oc config set-cluster <name>
  :options:
    :cert: --certificate-authority=<value>
    :embed: --embed-certs=<value>
    :insecure: --insecure-skip-tls-verify=<value>
    :server: --server=<value>
:config_set_context:
  :cmd: oc config set-context <name>
  :options:
    :cluster: --cluster=<value>
    :namespace: --namespace=<value>
    :user: --user=<value>
:config_set_creds:
  :cmd: oc config set-credentials <name>
  :options:
    :cert:  --client-certificate=<value>
    :key:  --client-key=<value>
    :embed:  --embed-certs=<value>
    :password:  --password=<value>
    :token: --token=<value>
    :user:  --username=<value>
:config_use_context:
  :cmd: oc config use-context <name>
:config_unset:
  :cmd: oc config unset <prop_name>
:config_view:
  :cmd: oc config view
  :options:
    :output: --output=<value>
    :flatten: --flatten
    :minify: --minify
  :expected:
    - "apiVersion: v"
    - "kind: Config"
  :optional_properties:
    :current_context: !ruby/regexp '/^current-context: (.+)/'
:create:
  :cmd: oc create
  :options:
    :f: -f <value>
    :filename: --filename=<value>
:create_serviceaccount:
  :cmd: oc create serviceaccount <serviceaccount_name>
:debug:
  :cmd: oc debug <global_options>
  :options:
     :resource: <value>
     :keep_annotations: --keep-annotations
     :keep_liveness: --keep-liveness
     :keep_readiness: --keep-readiness
     :one_container: --one-container=<value>
     :node_name: --node-name=<value>
     :c: -c <value>
     :t: -t
     :o: -o <value>
     :f: -f <value>
     :oc_opts_end: --
     :exec_command: <value>
     :exec_command_arg: <value>
:delete:
  :cmd: oc delete
  :options:
    :cascade: --cascade=<value>
    :f: -f <value>
    :l: -l <value>
    :all: --all
    #The following 'all' can be used with selectors, like the -l flag.
    :all_no_dash: all
    :grace-period: --grace-period=<value>
    :object_name_or_id: <value>
    :object_type: <value>
:deploy:
  :cmd: oc deploy <deployment_config>
  :options:
    :cancel: --cancel
    :enable_triggers: --enable-triggers
    :latest: --latest
    :retry: --retry
:describe:
  :cmd: oc describe <resource>
  :options:
    :name: <value>
    :l: -l <value>
    :f: -f <value>
    :selector: --selector=<value>
:edit:
  :cmd: oc edit
  :options:
    :filename: --filename=<value>
    :output: --output=<value>
:env:
  :cmd: oc env
  :options:
    :all: --all=<value>
    :e: -e <value>
    :env_name: <value>
    :keyval: <value>
    :list: --list=<value>
    :o: -o <value>
    :resource: <value>
:exec:
  # reorder global_options and options to allow specifying exec command
  :cmd: oc exec <pod> <global_options> <options>
  :options:
    :c: -c <value>
    :container: --container=<value>
    :stdin: --stdin=<value>
    :tty: --tty=<value>
    :t: -t
    :i: -i
    :oc_opts_end: --
    :exec_command: <value>
    :exec_command_arg: <value>
:exec_raw_oc_cmd_for_neg_tests:   # used for negative testing in which we want to deviate from yaml
  :cmd: oc
  :options:
    :arg: <value>
    :test_do_not_use: <value>
:cucushift_test_do_not_use:
  :cmd: <command>
  :options:
    :opt: <value>
:explain:
  :cmd: oc explain
  :options:
    :resource: <value>
:export:
  :cmd: oc export
  :options:
    :resource: <value>
    :name: <value>
    :filename: --filename=<value>
    :output_format: --output=<value>
    :all: --all=<value>
    :f: -f <value>
    :o: -o <value>
    :l: -l <value>
    :t: -t <value>
    :as_template: --as-template=<value>
    :exact: --exact=<value>
    :output_version: --output-version=<value>
:expose:
  :cmd: oc expose <resource> <resource_name>
  :options:
    :generator: --generator=<value>
    :external_ip: --external-ip=<value>
    :port: --port=<value>
    :protocol: --protocol=<value>
    :template: --template=<value>
    :target_port: --target-port=<value>
    :type: --type=<value>
    :name: --name=<value>
    :selector: --selector=<value>
    :output: --output=<value>
    :o: -o <value>
    :path: --path=<value>
:create_route_edge:
  :cmd: oc create route edge <name>
  :options:
    :hostname: --hostname=<value>
    :service: --service=<value>
    :cert: --cert=<value>
    :key: --key=<value>
    :cacert: --ca-cert=<value>
    :path: --path=<value>
:create_route_passthrough:
  :cmd: oc create route passthrough <name>
  :options:
    :hostname: --hostname=<value>
    :service: --service=<value>
:create_route_reencrypt:
  :cmd: oc create route reencrypt <name>
  :options:
    :hostname: --hostname=<value>
    :service: --service=<value>
    :cert: --cert=<value>
    :key: --key=<value>
    :cacert: --ca-cert=<value>
    :destcacert: --dest-ca-cert=<value>
    :path: --path=<value>
:get:
  :cmd: oc get <resource>
  :options:
    :a: --show-all=<value>
    :resource_name: <value>
    :output: --output=<value>
    :no_headers: --no-headers=<value>
    :o: -o <value>
    :l: -l <value>
    :L: -L <value>
    :w: --watch=<value>
    :template: --template=<value>
    :all_namespace: --all-namespaces=<value>
:help:
  :cmd: oc help
  :options:
    # use global `h` and `help` options if needed
:import_image:
  :cmd: oc import-image
  :options:
    :all: --all=<value>
    :confirm: --confirm=<value>
    :from: --from=<value>
    :image_name: <value>
    :insecure: --insecure=<value>
:label:
  :cmd: oc label <resource>
  :options:
    :all: --all=<value>
    :key_val: <value>
    :name: <value>
    :o: -o <value>
    :overwrite: --overwrite=<value>
:login:
  :cmd: oc login
  :options:
    :u: -u <value>
    :p: -p <value>
    :username: --username=<value>
    :password: --password=<value>
    :token: --token=<value>
  :optional_properties:
    :username: !ruby/regexp '/ogged into ".+?" as "(.+?)"/'
  :expected:
    # strange, sometimes "Already logged into..." is printed to console, and
    #   sometimes when run multiple times - not (oc v3.0.0.0)
    #   e.g. run multiple times `oc login --username=joe`
    - !ruby/regexp '/Login successful.|ogged into|sing project|new project/'
:logout:
  :cmd: oc logout
  :expected:
    - !ruby/regexp '/Logged ".+" out on/'
:logs:
  :cmd: oc logs <resource_name>
  :options:
    :c: -c <value>
    :f: -f
    :limit-bytes: --limit-bytes <value>
    :p: -p
    :since: --since <value>
    :since-time: --since-time <value>
    :timestamps: --timestamps
    :version: --version <value>
:new_app:
  :cmd: oc new-app
  :options:
    :allow_missing_images: --allow-missing-images=<value>
    :allow_missing_imagestream_tags: --allow-missing-imagestream-tags=<value>
    :app_repo: <value>
    :code: --code=<value>
    :context_dir: --context-dir=<value>
    :docker_image: --docker-image=<value>
    :env: --env=<value>
    :file: --file=<value>
    :group: --group=<value>
    :image: --image=<value>
    :image_stream: --image-stream=<value>
    :insecure_registry: --insecure-registry=<value>
    :l: -l <value>
    :labels: --labels=<value>
    :name: --name=<value>
    :output: --output=<value>
    :param: --param=<value>
    :search: --search=<value>
    :search_raw: --search <value>
    :strategy: --strategy=<value>
    :template: --template=<value>
:new_build:
  :cmd: oc new-build
  :options:
    :allow_missing_imagestream_tags: --allow-missing-imagestream-tags=<value>
    :app_repo: <value>
    :binary: --binary <value>
    :build_secret: --build-secret=<value>
    :code: --code=<value>
    :docker_image: --docker-image=<value>
    :D : -D <value>
    :e: -e <value>
    :image: --image=<value>
    :image_stream: --image-stream=<value>
    :l: -l <value>
    :name: --name=<value>
    :output: --output=<value>
    :source_image: --source-image=<value>
    :source_image_path: --source-image-path=<value>
    :strategy: --strategy=<value>
    :template: --template=<value>
    :to_docker: --to-docker=<value>
    :to : --to=<value>
    :no-output: --no-output=<value>
:new_project:
  :cmd: oc new-project <project_name>
  #:expected:
  #  - Created project <project_name>
  :options:
    :display_name: --display-name=<value>
    :description: --description=<value>
    :admin: --admin=<value>
:new_secret:
  :cmd: oc secrets new <secret_name> <credential_file>
  :options:
    :no_headers: --no-headers=<value>
    :output: --output=<value>  # One of: json|yaml|template|templatefile|wide
    :output_version: --output-version=<value>
    :template: --template=<value>
    :type: --type=<value>
    :quiet: --quiet=<value>
:oc_secrets_new_basicauth:
  :cmd: oc secrets new-basicauth <secret_name>
  :options:
    :username: --username=<value>
    :password: --password=<value>
    :cafile: --ca-cert=<value>
    :gitconfig: --gitconfig=<value>
    :prompt: --prompt=<value>
    :no_headers: --no-headers=<value>
    :output: --output=<value>
    :output_version: --output-version=<value>
    :template: --template=<value>
:oc_secrets_new_dockercfg:
  :cmd: oc secrets new-dockercfg <secret_name>
  :options:
    :docker_email: --docker-email=<value>
    :docker_password: --docker-password=<value>
    :docker_server: --docker-server=<value>
    :docker_username: --docker-username=<value>
    :no_headers: --no-headers=<value>
    :output: --output=<value>  # One of: json|yaml|template|templatefile|wide
    :output_version: --output-version=<value>
    :template: --template=<value>
:oc_secrets_new_sshauth:
  :cmd: oc secrets new-sshauth <secret_name>
  :options:
    :ssh_privatekey: --ssh-privatekey=<value>
    :cafile: --ca-cert=<value>
    :gitconfig: --gitconfig=<value>
    :prompt: --prompt=<value>
    :no_headers: --no-headers=<value>
    :output: --output=<value>
    :template: --template=<value>
:options:
  :cmd: oc options
:patch:
  :cmd: oc patch <resource>
  :options:
    :resource_name: <value>
    :p: -p <value>
:policy_add_role_to_group:
  :cmd: oc policy add-role-to-group <role> <group_name>
  :options:
    :role_namespace: --role-namespace=<value>
:policy_add_role_to_user:
  :cmd: oc policy add-role-to-user <role> <user_name>
  :options:
    :role_namespace: --role-namespace=<value>
    :serviceaccount: -z=<value>
:policy_remove_group:
  :cmd: oc policy remove-group <group_name>
:policy_remove_role_from_group:
  :cmd: oc policy remove-role-from-group <role> <group_name>
  :options:
    :role_namespace: --role-namespace=<value>
:policy_remove_role_from_user:
  :cmd: oc policy remove-role-from-user <role> <user_name>
  :options:
    :role_namespace: --role-namespace=<value>
:policy_who_can:
  :cmd: oc policy who-can <verb> <resource>
:port_forward:
  :cmd: oc port-forward
  :options:
    :pod: <value>
    :port_spec: <value>
:process:
  :cmd: oc process
  :options:
    :f: -f <value>
    :template: <value>
    :v: --value=<value>
    :l: -l <value>
    :parameters: --parameters=<value>
:project:
  :cmd: oc project
  :options:
    :project_name: <value>
:proxy:
  :cmd: oc proxy
  :options:
:replace:
  :cmd: oc replace
  :options:
    :f: -f <value>
    :force: --force
    :output: --output=<value>
    :cascade: --cascade
    :grace-period: --grace-period=<value>
:rollback:
  :cmd: oc rollback <deployment_name>
  :options:
    :change_scaling_settings: --change-scaling-settings
    :change_strategy: --change-strategy
    :change_triggers: --change-triggers
    :dry_run: --dry-run
    :output: --output=<value>
    :template: --template=<value>
    :to_version: --to-version=<value>
:rsh:
  :cmd: oc rsh <global_options> <options>
  :options:
    :app_name: <value>
    :c: --container=<value>
    :command: <value>
    :pod: <value>
    :shell: --shell=<value>
:rsync:
  #either source or destination must be in to format POD:/remote/dir/, i.e.
  #oc rsync ./local/dir/ POD:/remote/dir
  #oc rsync POD:/remote/dir/ ./local/dir
  #Please reference TC 510666 in features/cli/oc_rsync.feature for an example.
  :cmd: oc rsync <source> <destination>
  :options:
    :delete: --delete=<value>
    :strategy: --strategy=<value>
:run:
  :cmd: oc run <name>
  :options:
    :attach: --attach=<value>
    :command: --command=<value>
    :cmd: <value>
    :image: --image <value>
    :port: --port <value>
    :replicas: --replicas <value>
    :generator: --generator=<value>
    :limits: --limits=<value>
    :requests: --requests=<value>
    :dry_run: --dry-run
    :-i: --stdin=<value>
    :-l: --labels=<value>
    :-t: --template=<value>
    :-o: --output=<value>
    :overrides: --overrides=<value>
    :restart: --restart=<value>
    :tty: --tty=<value>
    :env: --env=<value>
:scale:
  :cmd: oc scale <resource> <name>
  :options:
    :current_replicas: --current-replicas=<value>
    :replicas:  --replicas=<value>
    :resource_ver: --resource-version=<value>
    :timeout: --timeout=<value>
:secrets:
  :cmd: oc secrets <action>
  :options:
    :name: <value>
    :source: <value>
    :serviceaccount: <value>
    :secrets_name: <value>
    :for: --for=<value>
    :username: --username=<value>
    :password: --password=<value>
:serviceaccounts_get_token:
  :cmd: oc serviceaccounts get-token <serviceaccount_name>
:serviceaccounts_new_token:
  :cmd: oc serviceaccounts new-token <serviceaccount_name>
  :options:
    :labels: --labels=<labels>
    :timeout: --timeout=<timeout_seconds>
:set_env:
  :cmd: oc set env
  :options:
    :all: --all=<value>
    :env_name: <value>
    :keyval: <value>
    :list: --list=<value>
    :resource: <value>
    :c: -c <value>
    :e: -e <value>
    :o: -o <value>
    :f: -f <value>
:set_probe:
  :cmd: oc set probe <global_options> <options>
  :options:
    :all: --all
    :oc_opts_end: --
    :exec_command: <value>
    :failure_threshold: --failure-threshold=<value>
    :get_url: --get-url=<value>
    :initial_delay_seconds: --initial-delay-seconds=<value>
    :liveness: --liveness
    :no_headers: --no-headers
    :open_tcp: --open-tcp=<value>
    :output_version: --output-version=<value>
    :period_seconds: --period-seconds=<value>
    :readiness: --readiness
    :remove: --remove
    :resource: <value>
    :success_threshold: --success-threshold=<value>
    :timeout_seconds: --timeout-seconds=<value>
    :c: -c <value>
    :f: -f <value>
    :l: -l <value>
    :o: -o <value>
:set_triggers:
  :cmd: oc set triggers
  :options:
    :all: --all=<value>
    :auto: --auto=<value>
    :containers: --containers=<value>
    :from_config: --from-config=<value>
    :from_github: --from-github=<value>
    :from_image: --from-image=<value>
    :from_webhook: --from-webhook=<value>
    :manual: --manual=<value>
    :remove: --remove=<value>
    :remove_all: --remove-all=<value>
    :resource: <value>
    :f: --filename=<value>
    :l: -l <value>
    :o: --output=<value>
    :t: --template=<value>
:set_volume:
  :cmd: oc set volume
  :options:
    :resource: <value>
    :resource_name: <value>
    :action: <value>
    :confirm: --confirm=<value>
    :name: --name=<value>
    :type: --type=<value>
    :secret-name: --secret-name=<value>
    :source: --source=<value>
    :mount-path: --mount-path=<value>
    :claim-name: --claim-name=<value>
    :claim-mode: --claim-mode=<value>
    :claim-size: --claim-size=<value>
    :all: --all=<value>
    :selector: --selector=<value>
    :overwrite: --overwrite
    :path: --path=<value>
:start_build:
  :cmd: oc start-build
  :options:
    :buildconfig: <value>
    :follow: --follow=<value>
    :from_build: --from-build=<value>
    :from_file: --from-file=<value>
    :from_dir: --from-dir=<value>
    :from_webhook: --from-webhook=<value>
    :from_repo: --from-repo=<value>
    :git_post: --git-post-receive=<value>
    :git_repository: --git-repository=<value>
    :list_webhooks: --list-webhooks=<value>
    :wait: --wait=<value>
    :commit: --commit=<value>
:status:
  :cmd: oc status
  :options:
    :v: -v
:stop:
  :cmd: oc stop <resource>
  :options:
    :f: --filename=<value>
    :name: <value>
:tag:
  :cmd: oc tag <source>
  :options:
    :dest: <value>
    :source_type: --source=<value>
    :alias: --alias=<value>
:types:
  :cmd: oc types
:version:
  :cmd: oc version
  :expected:
    - oc v
    - kubernetes v
  :properties:
    :oc_version: !ruby/regexp '/^oc v(.+)$/'
    :kubernetes_version: !ruby/regexp '/kubernetes v(.+)$/'
:volume:
  :cmd: oc volume
  :options:
    :resource: <value>
    :resource_name: <value>
    :action: <value>
    :confirm: --confirm=<value>
    :name: --name=<value>
    :type: --type=<value>
    :secret-name: --secret-name=<value>
    :source: --source=<value>
    :mount-path: --mount-path=<value>
    :claim-name: --claim-name=<value>
    :claim-mode: --claim-mode=<value>
    :claim-size: --claim-size=<value>
    :all: --all=<value>
    :selector: --selector=<value>
    :overwrite: --overwrite
    :path: --path=<value>
:whoami:
  :cmd: oc whoami
  :options:
    :invalid_option:  -b   # for negative testing
    :-c: --context=<value>
    :-t: --token=<value>
#################### admin commands section

:oadm_add_cluster_role_to_user:
  :cmd: oadm policy add-cluster-role-to-user <role_name> <user_name>
:oadm_add_cluster_role_to_group:
  :cmd: oadm policy add-cluster-role-to-group <role_name> <group_name>
:oadm_add_role_to_user:
  :cmd: oadm policy add-role-to-user <role_name> <user_name>
  :options:
    :role_namespace: --role-namespace=<value>
:oadm_add_role_to_group:
  :cmd: oadm policy add-role-to-group <role_name> <group_name>
:oadm_build_chain:
  :cmd: oadm build-chain
  :options:
    :all: --all=<value>
    :imagestreamtag: <value>
    :invalid_option: <value>   # for negative testing
    :o: -o <value>
:oadm_config_view:
  :cmd: oadm config view
  :options:
    :flatten: --flatten
    :minify: --minify
    :raw: --raw
:oadm_new_project:
  :cmd: oadm new-project <project_name>
  :expected:
    - Created project <project_name>
  :options:
    :display_name: --display-name=<value>
    :description: --description=<value>
    :admin: --admin=<value>
    :node_selector: --node-selector=<value>
:oadm_policy_add_scc_to_user:
  :cmd: oadm policy add-scc-to-user <scc>
  :options:
    :user_name: <value>
    :serviceaccount: --serviceaccount=<value>
:oadm_policy_remove_scc_from_user:
  :cmd: oadm policy remove-scc-from-user <scc>
  :options:
    :user_name: <value>
    :serviceaccount: --serviceaccount=<value>
:oadm_policy_add_scc_to_group:
  :cmd: oadm policy add-scc-to-group <scc> <group_name>
:oadm_policy_remove_scc_from_group:
  :cmd: oadm policy remove-scc-from-group <scc> <group_name>
:oadm_policy_who_can:
  :cmd: oadm policy who-can <verb> <resource>
  :options:
    :all_namespaces: --all-namespaces=<value>
:oadm_prune_builds:
  :cmd: oadm prune builds
  :options:
    :confirm: --confirm=<value>
    :keep_complete: --keep-complete=<value>
    :keep_failed: --keep-failed=<value>
    :keep_younger_than: --keep-younger-than=<value>
    :orphans: --orphans=<value>
    :orphans_noopt: --orphans
:oadm_prune_deployments:
  :cmd: oadm prune deployments
  :options:
    :confirm: --confirm=<value>
    :keep_complete: --keep-complete=<value>
    :keep_failed: --keep-failed=<value>
    :keep_younger_than: --keep-younger-than=<value>
    :orphans: --orphans=<value>
    :orphans_noopt: --orphans
:oadm_remove_cluster_role_from_user:
  :cmd: oadm policy remove-cluster-role-from-user <role_name> <user_name>
:oadm_remove_cluster_role_from_group:
  :cmd: oadm policy remove-cluster-role-from-group <role_name> <group_name>
:oadm_remove_role_from_user:
  :cmd: oadm policy remove-role-from-user <role_name> <user_name>
:oadm_remove_role_from_group:
  :cmd: oadm policy remove-role-from-group <role_name> <group_name>
:oadm_version:
  :cmd: oadm version
  :expected:
    - oadm v
    - kubernetes v
  :properties:
    :oadm_version: !ruby/regexp '/^oadm v(.+)$/'
    :kubernetes_version: !ruby/regexp '/kubernetes v(.+)$/'
:oadm_pod_network_join_projects:
  :cmd: oadm pod-network join-projects
  :options:
    :project: <value>
    :selector: --selector=<value>
    :to: --to=<value>
:oadm_pod_network_make_projects_global:
  :cmd: oadm pod-network make-projects-global
  :options:
    :project: <value>
    :selector: --selector=<value>
        
